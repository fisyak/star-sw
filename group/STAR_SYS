#!/bin/csh
#
# Determine STAR_SYS and STAR_HOST_SYS variables.
# History at the end of this script
#
if ( $?DECHO ) echo "======================================== start of STAR_SYS"
#setenv STAR_SYS ""
source $GROUP_DIR/unix_programs.csh
if ( $?self ) then
    set STAR_SYS_pself=${self}
endif
set self="STAR_SYS"
#
# Sort it out otherwise via uname command
#
if ($?STAR_SYS ==  0) setenv STAR_SYS ""
if ( "${STAR_SYS}" == "" || "${STAR_SYS}" == "unknown") then
    if ( $?DECHO ) echo "$self :: STAR_SYS still empty - trying uname"
    # selection using uname -sr
    set mach_os = `uname -sr | sed -e 's/ //g' -e 's/\.//g' -e 's/(.*//'`
    if ($?DECHO) echo "mach_os = ${mach_os}"
    switch ($mach_os)
     case "Linux222":
	if ( $?DECHO ) echo "$self :: Linux222 logic branching"
	setenv STAR_SYS i386_redhat51
	breaksw

     case "Linux*":
	if ( $?DECHO ) echo "$self :: any Linux logic branching"
	#setnenv STAR_SYS i386_redhat61
	# Creating a sys name like <architecture>_<sysname><sysversion>
	### 2019, trying to emulate x8664_sl7 or x8664_rh7 if exists
	set redhat = ""
	set architecture =  `/bin/uname -m | /bin/sed -e 's/_//g'`
	set sysname = `/bin/uname -s | /usr/bin/tr '[A-Z]' '[a-z]'`
	if ( "$sysname" == "linux") then
	    if ( -e "/etc/redhat-release") then
		if ( $?DECHO ) echo "$self :: -> using redhat-release to set arch"
		set redhat = `$AWK '{print $1 $2}' /etc/redhat-release | /bin/sed "s/[a-z]//g" | $AWK '{print tolower($1)}'`
		set redhat   = $redhat`$AWK '{for (i=1;i<=NF;i++) if ($i == "release" || $i == "Release") print $(i+1)}' /etc/redhat-release | /bin/sed "s/\..*//"`
	    endif
	endif
	if ( "$redhat" != "") then
	  set sysversion = ${redhat}
	  set sysname    = ""
	else
	  set sysversion = `/bin/uname -r | $AWK -F- '{print $1}' | /bin/sed -e 's/\.//g'`
        endif
	setenv STAR_SYS ${architecture}_${sysname}${sysversion}
	breaksw

     case "OSF1V32":
     case "OSF1V40":
	if ( $?DECHO ) echo "$self :: Alpha OSF1 logic branch"
	setenv STAR_SYS alpha_osf32c
	breaksw
     case "OSF1*":
	if ( $?DECHO ) echo "$self :: OSF1 logic branch"
	setenv STAR_SYS osf1
	breaksw

     case "SunOS54":
        setenv STAR_SYS sun4x_54
	if ( $?DECHO ) echo "$self :: SunOSx454 logic branch (historical)"
	breaksw
     case "SunOS551":
	if ( $?DECHO ) echo "$self :: SunOSx455 logic branch (historical)"
        setenv STAR_SYS sun4x_55
	breaksw
     case "SunOS5*":
	if ( $?DECHO ) echo "$self :: SunOS generic logic branch"
	switch ("`/bin/uname -p`")
	    case "*86":
		setenv STAR_SYS sunx86_55
		breaksw
	    default:
		setenv STAR_SYS sun4x_55
		breaksw
	endsw
	breaksw

     case "CYGWIN*":
	if ( $?DECHO ) echo "$self :: Cygwin detected"
	setenv STAR_SYS "$mach_os"
	breaksw
     case "Darwin*":
	if ( $?DECHO ) echo "$self :: Cygwin detected"
	setenv STAR_SYS amd64_darwin_240
        breaksw
     default:
	if ( $?DECHO ) echo "$self :: Bam!! Unknown"
	setenv STAR_SYS unknown
	breaksw
    endsw
endif

# Solaris 4 hack
if ("${STAR_SYS}" == "sun4x_56") then
    if ($STAR_LEVEL  == "old") then
	if ($?USE_CC4  == 1 && $?USE_CC5  == 1) unsetenv USE_CC5
	if ($?USE_CC5  == 0 && "${STAR_SYS}" == "sun4x_56") setenv USE_CC4 "YES"
    else
	if ($?USE_CC4  == 1 && $?USE_CC5  == 1) unsetenv USE_CC4
	if ($?USE_CC4  == 0 && "${STAR_SYS}" == "sun4x_56") setenv USE_CC5 "YES"
    endif
    if ($?USE_CC5  == 1) setenv STAR_HOST_SYS sun4x_56_CC5
endif


# All default value
setenv STAR_HOST_SYS $STAR_SYS

# Initially did not think of 64 bit architecture
# The thought of it and switched all to 64 but we need a way to support
# both -m32 and -m64 ... So, will rely on USE_64BITS variable.
# Default no.
if ( ! $?USE_64BITS ) then
    setenv USE_64BITS 0
endif


# Linux hacks
    #
    # Upper version of Linux drastic change in scheme J.Lauret 2003.
    # Will need to find a more permanent solution for the above ...
    # (maybe drop of support) as it is a bit messy in its branching.
    #
    # Also, BEWARE of non RedHat releases
    #
    setenv STAR_HOST_SYS $STAR_SYS
    set redhat = ""
    set avx512 = ""
    if (-f /etc/redhat-release) then
	set rhflavor = `$AWK '{print $1 $2}' /etc/redhat-release | sed "s/[a-z]//g" | $AWK '{print tolower($1)}'`
	set redhat   = `$AWK '{for (i=1;i<=NF;i++) if ($i == "release" || $i == "Release") print $(i+1)}' /etc/redhat-release`
	set rhmajor  = `echo $redhat | sed "s/\..*//"`
	set redhat   = `echo $redhat | sed "s/\.//g"`
	if ($rhmajor >= 9) then
	if (-r /proc/cpuinfo) then
	   grep -i 'avx512' /proc/cpuinfo > /dev/null
           if ($?) set avx512 = "_v3"
        endif
        endif
    else
	# will try this combination to first order
	# - on linux, would lead to something like .linux_i686
	# - on MAC, would lead to .power_macintosh
	# - on Solaris, would be .sunos_sun4u
	#
	# Note that only partial enabling is made (there is a lack
	# of conistency ; should all go through STARCMPL
	switch ($STAR_SYS)
	    case "*darwin*"
		set rhflavor = ""
		set rhmajor  = `uname -s | tr '[A-Z]' '[a-z]'`
		set redhat   = `uname -m | tr '[A-Z]' '[a-z]' | sed "s/ /_/g"`
		breaksw
	    case "*linux*"
                set rhflavor = `uname -s | tr '[A-Z]' '[a-z]'`
                set redhat = `uname -r | $AWK -F- '{print $1}' | sed -e 's/\.//g'`
		set rhmajor = 0
		setenv STAR_SYS ${rhflavor}${redhat}
	    default:
        endsw
    endif
    if ($?DECHO) echo "rhflavor ${rhflavor}, rhmajor = ${rhmajor}, redhat = ${redhat}"
    if ( "$redhat" != "") then
	# Note:
	#    always assume the compiler is in the path
	#    STARCMPL can be defined outside (see 'setup' for example)
	#
	if ( ! $?STARCMPL) setenv STARCMPL "gcc"
	set vers = ""
	switch ($STARCMPL)
	 case "*icc*":
	    #set vers = `which icc | /bin/sed 's/.*compiler//i;s/\/.*//'`
	    #set vers = `icc -V -dryrun > & /tmp/icc_version; \
	    #awk '{ if (NR==1) print $8 }' /tmp/icc_version | awk -F\. '{print $1$2}'; \
	    #rm  /tmp/icc_version;`
#	    set test=`which icc | $GREP "not found"`
#	    if ( "$test" == "") then
#		set vers =  `$STARCMPL -v >&/tmp/icc_version$$ ; $AWK '{print $3}' /tmp/icc_version$$ | /bin/sed "s/\.//g" && /bin/rm  /tmp/icc_version$$;`
#		echo "$vers" | grep 'license'
#                if ($? == "0") then
#		   echo "icc is not supported on this machine"
#                   set vers = 1700
#                endif
#	    endif
	    set vers = 1700
	    setenv STARCMPLC "icc"
	    breaksw

	 default:
	    if ( $?DECHO ) echo "$self :: case default with $STARCMPL"
	    if ( $?DECHO ) echo "$self :: PATH = $PATH <<<<<<<<<<<<<<<<<<"
	    if ("$STARCMPL" == "") then
		# verify the compiler actually exists
		set test=`which gcc | $GREP "not found"`
		setenv STARCMPLC "gcc"
            else
		set test=""
	    endif
	    if ( "$test" == "") then
		set vers = `$STARCMPL -dumpversion | $AWK -F. '{print $1$2$3}'`
		if ( $?DECHO ) echo "$self :: Determined version as [$vers]"
		# now reset it as we will use the canonical compiler name
		setenv STARCMPLC "gcc"
	    endif
       endsw
    if ($?DECHO) echo "rhflavor ${rhflavor}, rhmajor = ${rhmajor}, redhat = ${redhat}"
       setenv xSTARCMPL "$STARCMPL$vers"
       if ($?DECHO) echo "$STARCMPL = > $STARCMPL => $vers"
       # The below was made to exclude 7.2 Redhat using i386_linux24
       # and other un-predicted flavor of it. The introduction of
       # SL and RHE lead to simply it. There may be a need to also
       # exclude 70, 71.
       #if ($redhat == 73 || $rhmajor >= 8 || "$rhflavor" == "sl") then
       if ($redhat != 72) then
	if ("$vers" != "" ) then
	    switch ($STAR_SYS)
		case "*darwin*": 
		    setenv STAR_HOST_SYS ${STAR_SYS}_${xSTARCMPL}
		    breaksw
		case "x86*":
		case "amd64*":
		    if ( $USE_64BITS == 1 ) then
			setenv STAR_HOST_SYS ${rhflavor}${redhat}_x8664_${STARCMPLC}${vers}
		    else
			setenv STAR_HOST_SYS ${rhflavor}${redhat}_${STARCMPLC}${vers}
		    endif
		    breaksw
		default:
		    setenv STAR_HOST_SYS ${rhflavor}${redhat}_${STARCMPLC}${vers}
	    endsw
	endif
#	echo "STAR_HOST_SYS => $STAR_HOST_SYS"
    endif
   endif

# restore if previously defined
if ( $?STAR_SYS_pself ) then
    set self=$STAR_SYS_pself
    unset STAR_SYS_pself
endif
# trick to handle non STAR nodes
if ("${STAR_SYS}" == "sl64_gcc447"      ) setenv STAR_HOST_SYS sl64_gcc482
if ("${STAR_SYS}" == "sl64_x8664_gcc447") setenv STAR_HOST_SYS sl64_x8664_gcc482
if ($?STAR_HOST_SYS) then
  setenv STAR_HOST_SYS ${STAR_HOST_SYS}${avx512}  
endif
echo $STAR_LEVEL | egrep '(.DEV2|TFG22[d-z]|TFG2[3-9][a-z]|TFG.star|^TFG$)' > /dev/null
if ($?) then 
  if ($?STAR_NEW_ENVIRONMENT) unsetenv STAR_NEW_ENVIRONMENT
  if ($?STAR_HOST_SYS_OPT)    unsetenv STAR_HOST_SYS_OPT
  if ($?DECHO) echo "STAR_SYS = ${STAR_SYS}, STAR_HOST_SYS = ${STAR_HOST_SYS}"
else 
  setenv STAR_NEW_ENVIRONMENT yes
  set opt = "";
  if ($?NODEBUG) then 
    set opt = "_opt";
    if ($NODEBUG == "-O3") set opt = "_opt3";
  endif
  set R = "";
  if (! $?ROOT_VERSION) setenv ROOT_VERSION ""
  if ($ROOT_VERSION == "6") set R = "_R"$ROOT_VERSION
  setenv STAR_HOST_SYS_OPT ${STAR_HOST_SYS}${opt}${R}
  unset opt
  unset R
  if ($?DECHO) echo "STAR_SYS = ${STAR_SYS}, STAR_HOST_SYS = ${STAR_HOST_SYS}, STAR_HOST_SYS = ${STAR_HOST_SYS}, STAR_HOST_SYS_OPT = ${STAR_HOST_SYS_OPT}"
endif
# Define /opt/star (or equivalent)
    if (-r ${AFS_RHIC}/opt/star) then
      setenv OPTSTAR ${AFS_RHIC}/opt/star
    else 
      if (-r /opt/star) then 
        setenv OPTSTAR /opt/star
      endif
   endif
   setenv XOPTSTAR ${OPTSTAR}
   if (-r ${OPTSTAR}/${STAR_HOST_SYS}) then 
     setenv XOPTSTAR ${OPTSTAR}/${STAR_HOST_SYS}
   endif

if ( $?DECHO ) echo "======================================== end of STAR_SYS"
