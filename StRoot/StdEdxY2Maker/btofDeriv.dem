load (f90) ;
:lisp (setq *f90-output-line-length-max* 1000000000) 
stardisp: true$
simplified_output: true$
debugmode(true) $ 

/*
   DCA: mImp, mZ, mPsi, mPti, mTan, mCurv
   Tof: Res (60 ps)
   dX = X_hit - X_vertex
   dY = Y_hit - Y_vertex
   dZ = Z_hit - Z_vertex
   s_perp = sqrt(dX*dX + dY*dY); 	
   kCLight = 0.000299792458f;
   bq = B*fQ*kCLight;	
   a = dx*px+dy*py;
   abq = bq*a;
   dS = (a + dz*pz)/p2;

   dS = atan2( abq, pt2 + bq*(dy*px -dx*py) )/bq;
   Hz = kCLight * B
   curvature  = Hz q / pT 
   Hz = 1e-15 * b [kG] * CLight[cm/sec] = 2.99792458e-4
   q  = - sign(1, mPti)
   Mq := M/q; 
   pq : = p/q
   dX = X2 - X1;
   dY = Y2 - Y1;
   R1 = sqrt(X1**2 + Y1**2)
   R2 = sqrt(X2**2 + Y2**2)
   dXY = sqrt(dX**2 + dY**2) 
   pT(mPti)         := -q/mPti;                q - is particle charge, mPti = -q/pT - measurement from Sti, pTq  = q*pT 
   subst(pow,"^",`dd);
*/
mCurv(mPti) := Hz*mPti;
R(mPti) := 1/mCurv(mPti);
Phi(mPti,dXY) := asin(dXY/(2*R(mPti)));
s_perp(mPti,dXY) := 2*R(mPti) * Phi(mPti,dXY); 
pathlength(mPti,dXY,dZ) := sqrt(s_perp(mPti,dXY)**2 + dZ**2);
/*
logpath(mPti,dXY,dZ) := log(pathlength(mPti,dXY,dZ));
dPathd : jacobian ( [logpath(mPti,dXY,dZ)], [mPti, dXY, dZ]); */

dPathd : jacobian ( [pathlength(mPti,dXY,dZ)], [mPti, dXY, dZ]);
f90(dPathd);
with_stdout ("dPathd.txt",  f90(dPathd));
/*
(%i25) f90(dPathd)
dPathd(1,1) = (((4*dXY*asin((Hz*dXY*mPti)/2.d+0))/(Hz*mPti**2*sqrt(1-(Hz**2*dXY**2*mPti**2)/4.d+0))-(8*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**3))/sqrt((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2))/2.d+0
dPathd(1,2) = (2*asin((Hz*dXY*mPti)/2.d+0))/(Hz*mPti*sqrt(1-(Hz**2*dXY**2*mPti**2)/4.d+0)*sqrt((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2))
dPathd(1,3) = dZ/sqrt((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)
*/
length(tof) := tof*kCLight;

betaV(mPti,dXY,dZ,tof) := length(tof)/pathlength(mPti, dXY, dZ);

pTq(mPti)        := -1/mPti;               /* q - is particle charge, mPti = -q/pT - measurement from Sti, pTq  = q*pT */
pZq(mPti,mTan)   := mTan*pTq(mPti);
p2q2(mPti,mTan)  := (pTq(mPti)**2 + pZq(mPti,mTan)**2);
M2q2(mPti,mTan,dXY,dZ,tof) := p2q2(mPti,mTan)*(betaV(mPti,dXY,dZ,tof)**2 - 1);

d2d : jacobian( [betaV(mPti,dXY,dZ,tof), M2q2(mPti,mTan,dXY,dZ,tof) ], [mPti, mTan, dXY, dZ, tof] ); 
trigsimp(d2d);

f90(d2d);
with_stdout ("d2d.txt",  f90(d2d));
/*
d2d(1,1) = -(kCLight*((4*dXY*asin((Hz*dXY*mPti)/2.d+0))/(Hz*mPti**2*sqrt(1-(Hz**2*dXY**2*mPti**2)/4.d+0))-(8*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**3))*((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)**((-3.d+0)/2.d+0)*tof)/2.d+0
d2d(1,2) = 0
d2d(1,3) = -(2*kCLight*asin((Hz*dXY*mPti)/2.d+0)*((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)**((-3.d+0)/2.d+0)*tof)/(Hz*mPti*sqrt(1-(Hz**2*dXY**2*mPti**2)/4.d+0))
d2d(1,4) = -dZ*kCLight*((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)**((-3.d+0)/2.d+0)*tof
d2d(1,5) = kCLight/sqrt((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)
d2d(2,1) = ((-(2*mTan**2*q**2)/mPti**3)-2/mPti**3)*((kCLight**2*tof**2)/((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)-1)-(kCLight**2*((4*dXY*asin((Hz*dXY*mPti)/2.d+0))/(Hz*mPti**2*sqrt(1-(Hz**2*dXY**2*mPti**2)/4.d+0))-(8*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**3))*((mTan**2*q**2)/mPti**2+1/mPti**2)*tof**2)/((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)**2
d2d(2,2) = (2*mTan*q**2*((kCLight**2*tof**2)/((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)-1))/mPti**2
d2d(2,3) = -(4*kCLight**2*asin((Hz*dXY*mPti)/2.d+0)*((mTan**2*q**2)/mPti**2+1/mPti**2)*tof**2)/(Hz*mPti*sqrt(1-(Hz**2*dXY**2*mPti**2)/4.d+0)*((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)**2)
d2d(2,4) = -(2*dZ*kCLight**2*((mTan**2*q**2)/mPti**2+1/mPti**2)*tof**2)/((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)**2
d2d(2,5) = (2*kCLight**2*((mTan**2*q**2)/mPti**2+1/mPti**2)*tof)/((4*asin((Hz*dXY*mPti)/2.d+0)**2)/(Hz**2*mPti**2)+dZ**2)
*/

dZ(mZ,mTan) := mZ  + (R2 - R1)*mTan;
dXY(mImp)  := mImp;

JVarsD : jacobian([mPti, mTan, dXY(mImp), dZ(mZ,mTan), tof], [mImp, mZ, mPsi, mPti, mTan, tof] );
/*
*/
trigsimp(JVarsD);

f90(JVarsD);
with_stdout ("JVarsD.txt",  f90(JVarsD));
